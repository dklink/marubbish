function collision_rate = get_algae_collisions (particle, S, T, chl, I)% get_algae_collisions: calculates rate of algae/particle collisions. Kooi 2017, eq. 11, first term    % particle: the particle in question.    % S: salinity at the particle (g kg^-1)    % T: temperature at the particle (Celsius)    % chl: the ambient chlorophyll-a concentration at the particle (mg m^-3)    % I: light intensity at the particle (mol quanta m^-2 s^-1)    % return: rate of algae/particle collisions (# algal cells s^-1)        k = constants.k; % boltzmann constant (m^2 kg s^-2 K^-1)    mu_sw = dynamic_viscosity_seawater(S, T);  % dynamic viscosity of seawater (kg m^-1 s^-1)    r_tot = particle.r_tot;  % radius of particle/algae system (m)    r_A = kooi_constants.r_A;  % radius of individual algae (m)    V_s = get_settling_velocity(particle);  % settling velocity of particle (m/s)    gamma = kooi_constants.gamma; % shear rate (s^-1)    % theta_pl = particle.theta_pl(); % surface area of plastic particle (m^2)        D_pl = k * (T + 273.16) ./ (6*pi * mu_sw * r_tot);   % diffusivity of plastic particle (m^2 s^-1)    D_A = k * (T + 273.16) ./ (6*pi * mu_sw * r_A);      % diffusivity of algae cell (m^2 s^-1)    Beta_A_brownian = 4*pi * (D_pl + D_A) * (r_tot + r_A);  % brownian motion kernel rate (m^3 s^-1)       Beta_A_settling = 1/2 * pi * r_tot^2 * V_s;  % differential settling kernel rate (m^3 s^-1)        Beta_A_shear = 1.3 * gamma * (r_tot + r_A)^3;  % advective shear kernel rate (m^3 s^-1)        Beta_A = Beta_A_brownian + Beta_A_settling + Beta_A_shear;  % encounter kernel rate (m^3 s^-1)        A_A = convert_chl_to_algae(chl, T, I);  % ambient algae concentration (# algae cells m^-3)        collision_rate = Beta_A * A_A; %/ theta_pl;  % rate of particle/algae collisions (# algae cells s^-1)    % note: kooi divides above by theta_pl, but this gives incorrect dimensionsend